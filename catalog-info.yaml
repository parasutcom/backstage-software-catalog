---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: server
  description: A heart of the Parasut. All the requests are handled by this API.
  links:
    - url: https://api.parasut.com/
      title: Parasut API
spec:
  type: swagger
  lifecycle: production
  owner: group:parasutcom
  system: system-name
  definition:
    $yaml: |
      swagger: '2.0'
      info:
        version: 4.0.0
        title: Paraşüt - API V4
        x-logo:
          url: 'https://apidocs.parasut.com/logo.png'
          backgroundColor: null
        description: >
          - API metodlarına erişmek için baz URL olarak
          `https://api.parasut.com/v4/firma_no` adresi kullanılır.
            - Bu yapıda kullanılan `firma_no` parametresi bilgisine erişilmek istenin firmanın Paraşüt veritabanındaki kayıt numarasıdır.
            - Örneğin 115 numaralı firmanın müşteri/tedarikçi listesine erişmek için `https://api.parasut.com/v4/115/contacts` adresi kullanılır.
          - İstekleri gönderirken `Content-Type` header'ı olarak `application/json`
          veya `application/vnd.api+json` göndermelisiniz.

          - Yeni bir kayıt oluştururken **ilgili** kaydın `ID` parametresini boş
          göndermeli veya hiç göndermemelisiniz.
            - Örnek: Satış faturası oluştururken `data->id` boş olmalı, ama `relationships->contact->data->id` dolu olmalı, çünkü gönderdiğiniz müşterinizin ID'si daha önceden elinizde bulunmalıdır. Aynı şekilde `relationships->details->data` içerisinde tanımladığınız ID'ler de boş olmalı, çünkü henüz fatura kalemi yaratmadınız.
          - API endpointlerine ulaşmak için, aldığınız `access_token`'ı sorgulara
          `Authorization` header'ı olarak `Bearer access_token` şeklinde
          göndermelisiniz.

          - 10 saniyede 10 adet istek gönderebilirsiniz.

          - Oluşturuduğunuz Webhook'un URL'ine gönderilen requestlerin `Signature` headerı `event data` ve size tanımlanan
          `encryption key` değerlerini SHA256 ile hash'leyerek ile oluşturulur.
            - Örnek bir Webhook URL'ine gönderilen request şöyle görünür;

            `Content-Type: www-url-encoded`

              ```json
              body: {
                "company_id": "1",
                "resource": "sales_invoice",
                "action": "update",
                "event_date": "2023-01-02T01:01:00.000Z",
                "data": {
                  "id": 1,
                  "company_id": "1",
                  "created_at": "2023-01-01T01:01:00.000Z",
                  "updated_at": "2023-01-01T01:02:00.000Z",
                  "operated_by_type": null,
                  "operated_by_id": null,
                  "included": [ ... ], # array of related objects
                  "data": { ... } # unparsed (ayrıştırılmamış), string halinde object modal. İlgili modeli dönen API ile aynı formatta
                  # data bu örnekte sales invoice, ilgili API: /#operation/showSalesInvoice
                }
              }
              ```


          # Authentication


          <!-- ReDoc-Inject: <security-definitions> -->


          Paraşüt API kimlik doğrulama için oAuth2 kullanmaktadır. Bu protokolü
          destekleyen istemci kütüphanelerini kullanarak oturum açabilir ve API'yi
          kullanabilirsiniz.


          Gerekli CLIENT_ID, CLIENT_SECRET ve REDIRECT_URL bilgilerini almak için
          destek@parasut.com adresine mail atabilirsiniz.


          Kimlik doğrulama işleminin başarılı olması durumunda bir adet kimlik jetonu
          (authentication token) ve bir adet de yenileme jetonu (refresh token)
          gönderilecektir. Kimlik jetonu 2 saat süreyle geçerlidir ve her istekte http
          başlık bilgilerinin içerisinde gönderilmelidir. Bu sürenin sonunda kimlik
          jetonu geçerliliğini yitirecektir ve yenileme jetonu kullanılarak tekrar
          üretilmesi gerekmektedir.


          ## access_token almak:


          access_token almanız için iki farklı seçenek bulunmaktadır.


          Kullanım şeklinize bağlı olarak iki yöntemden birini tercih etmelisiniz.


          ### 1. grant_type=authorization_code


          Bu yöntemi kullanabilmek için öncelikle aşağıda belirtildiği gibi
          kullanıcıyı başarılı authentication işleminin ardından yönlendirmek
          istediğiniz `REDIRECT_URL`'i bize ulaşarak kayıt ettirmeniz gerekmektedir.
          `REDIRECT_URL` varsayılan olarak `urn:ietf:wg:oauth:2.0:oob` gelmektedir.


          Size özel bir REDIRECT_URL tanımlamak isterseniz destek@parasut.com adresine
          mail atabilirsiniz.


          1. Kullanıcıyı şu adrese yönlendirin:

            ```
            BASE_URL/oauth/authorize?client_id=CLIENT_ID&redirect_uri=REDIRECT_URL&response_type=code
            ```

          2. Oturum açmışsa ve uygulamayı kabul ederse, kullanıcı sizin tanımladığınız
          REDIRECT_URL'e şu şekilde gelmesi gerekiyor:
            `REDIRECT_URL?code=xxxxxxx`

          3. Burada size gelen "code" parametresi ile access token almalısınız.


          ```bash

          curl -F grant_type=authorization_code \

          -F client_id=CLIENT_ID \

          -F client_secret=CLIENT_SECRET \

          -F code=RETURNED_CODE \

          -F redirect_uri=REDIRECT_URL \

          -X POST BASE_URL/oauth/token

          ```


          ### 2. grant_type=password


          E-posta ve şifre ile access_token almanız için aşağıdaki istekte size özel
          alanları doldurarak POST isteği atmanız gerekmektedir.


          ```bash

          curl -F grant_type=password \

          -F client_id=CLIENT_ID \

          -F client_secret=CLIENT_SECRET \

          -F username=YOUREMAIL \

          -F password=YOURPASSWORD \

          -F redirect_uri=urn:ietf:wg:oauth:2.0:oob \

          -X POST BASE_URL/oauth/token

          ```


          ### Sonuç


          Her iki yöntem sonucunda size aşağıdaki gibi bir sonuç dönecektir:


          ```json

          {
          "access_token": "XYZXYZXYZ",
          "token_type": "bearer",
          "expires_in": 7200,
          "refresh_token": "ABCABCABC"
          }

          ```


          Burada dönen `access_token`'ı API endpointlerine ulaşmak için gönderdiğiniz
          sorgulara `Authorization` header'ı olarak `Bearer XYZXYZXYZ` şeklinde
          eklemeniz gerekiyor.



          #### Refresh token ile yeni access_token alma örneği:


          `access_token` geçerliliğini 2 saat içerisinde yitirdiği için
          `refresh_token` ile yeni token alabilirsiniz.


          ```bash

          curl -F grant_type=refresh_token \

          -F client_id=CLIENT_ID \

          -F client_secret=CLIENT_SECRET \

          -F refresh_token=REFRESH_TOKEN \

          -X POST BASE_URL/oauth/token

          ```


          `refresh_token` ile yeni bir `access_token` alırken aynı zamanda yeni bir
          `refresh_token` da almaktasınız. Dolayısıyla, daha sonra yeniden bir
          `access_token` alma isteğinizde size dönen yeni `refresh_token`ı
          kullanmalısınız.


          # SIK KULLANILAN İŞLEMLER


          ## Kullanıcı Bilgisi


          `access_token` aldığınız kullanıcının genel bilgilerini görmek için
          [/me](/#operation/showMe) adresini kullanabilirsiniz.


          ## Satış Faturası Oluşturma


          Satış faturası oluşturmak için bir müşteri (`contact`) `id`'si ve bir veya
          birden fazla ürün (`product`) `id`'sine ihtiyacınız vardır.


          ### Müşteri


          ##### Yeni bir müşteri ile


          Eğer ihtiyaç duyduğunuz müşteri bilgisi henüz yoksa, öncelikle müşteri
          oluşturmanız gereklidir. Bunun için [Müşteri
          oluşturma](/#operation/createContact) endpoint'ini kullanmalısınız. Başarılı
          bir şekilde müşteri oluşturulursa size dönecek olan yanıt ihtiyaç
          duyacağınız müşteri `id`'sini içerir.


          ##### Mevcut bir müşteri ile


          Eğer daha önceden zaten oluşturduğunuz bir müşteri ile ilişkili bir satış
          faturası oluşturacaksanız öncelikle o müşterinin `id`'sini öğrenmeniz
          gerekir. Bunun için [Müşteri listesi](/#operation/listContacts) endpoint'ini
          kullanabilirsiniz. Müşteri listesi endpoint'i isim, e-posta, vergi numarası
          gibi çeşitli filtreleri destekler. Bunları kullanarak aradığınız müşteriyi
          bulabilirsiniz.


          ### Ürün


          ##### Yeni bir ürün ile


          Eğer ihtiyaç duyduğunuz ürün bilgisi henüz yoksa, öncelikle ürün
          oluşturmanız gereklidir. Bunun için [Ürün
          oluşturma](/#operation/createProduct) endpoint'ini kullanmalısınız. Başarılı
          bir şekilde ürün oluşturulursa size dönecek olan yanıt ihtiyaç duyacağınız
          ürün `id`'sini içerir.


          ##### Mevcut bir ürün ile


          Eğer daha önceden oluşturduğunuz bir ürünü kullanarak bir satış faturası
          oluşturacaksanız öncelikle o ürünün `id`'sini öğrenmeniz gerekir. Bunun için
          [Ürün listesi](/#operation/listProducts) endpoint'ini kullanabilirsiniz.
          Ürün listesi endpoint'i isim, kod gibi çeşitli filtreleri destekler. Bunları
          kullanarak aradığınız ürünü bulabilirsiniz.


          ---


          İhtiyaç duyduğunuz müşteri ve ürün `id`'lerini aldıktan sonra [Satış
          Faturası Oluşturma](/#operation/createSalesInvoice) endpoint'i ile satış
          faturası oluşturabilirsiniz. Endpoint'in tanımında sağ tarafta beklediğimiz
          veri şekli bulunmaktadır, aşağıdaki bilgileri verinin şekli ile kıyaslamak
          daha açıklayıcı olabilir.


          Dikkat edilecek noktalar:

          * `relationships` altındaki `contact`'te bulunan `id` alanına müşteri
          `id`'sini girmeniz gereklidir.

          * `relationships` altındaki `details` kısmı bir listedir (`array`) ve fatura
          kalemlerini temsil eder. Bu listenin her elemanının ilişkili olduğu bir ürün
          vardır. Yani `details` altındaki her elemanın kendine ait bir
          `relationships` kısmı mevcuttur. Buradaki `product` `id` alanı üstteki ürün
          adımlarında elde ettiğiniz `id`'yi koymanız gereken yerdir.


          ## Satış Faturasına Tahsilat Ekleme


          [Tahsilat ekleme](/#operation/paySalesInvoice) kısmındaki ilgili alanları
          doldurarak satış faturasına tahsilat ekleyebilirsiniz.


          ## Satış Faturasının Tahsilatını Silme


          Bir satış faturasının tahsilatını silmek aslında o tahsilatı oluşturan para
          akış işlemini silmek demektir. Bir işlemi silmeden önce o işlemin `id`'sine
          ihtiyacınız vardır.


          Bir satış faturasına ait tahsilatları almak için [Satış faturası bilgilerini
          alma (show)](/#operation/showSalesInvoice) endpoint'ine istek atarken
          `?include=payments` parametresini de eklemelisiniz. Bu size satış faturası
          bilgilerine ilave olarak tahsilatları da verir.


          Tahsilatlar ile birlikte o tahsilatları oluşturan işlemleri de almak için
          yine aynı endpoint'e `?include=payments.transaction` parametresini ekleyerek
          istek yapmanız gerekir. Bu size hem satış faturası bilgilerini, hem tahsilat
          bilgilerini hem de tahsilatı oluşturan işlemlerin bilgilerini verir.


          `?include=payments.transaction` parametresini kullanarak yaptığınız istek
          ile işlem (`transaction`) `id`'sini aldıktan sonra [işlem
          silme](/#operation/deleteTransaction) endpoint'inde bu `id`'yi kullanarak
          silme işlemini yapabilirsiniz.


          ## Satış Faturası Resmileştirme


          Oluşturduğunuz bir satış faturası varsa onu e-Arşiv veya e-Fatura olarak
          resmileştirmek için aşağıdakileri yapmanız gereklidir.


          1. Öncelikle müşterinizin e-Fatura kullanıcısı olup olmadığını
          öğrenmelisiniz. Bunun için müşterinizin e-Fatura gelen kutusu olup
          olmadığına bakmak gereklidir. [e-Fatura gelen
          kutusu](/#operation/listEInvoiceInboxes) endpoint'ine müşterinin vkn'sini
          kullanarak bir istek yaptığınızda eğer bir gelen kutusu olduğuna dair yanıt
          alıyorsanız müşteri e-Fatura kullanıcısıdır. Müşteri e-Fatura kullanıcısı
          ise resmileştirme için e-Fatura oluşturmak, e-Fatura kullanıcısı değilse
          e-Arşiv oluşturmak gereklidir. İhracat Faturaları her zaman e-Fatura olarak
          resmileştirilmelidir.


          Oluşturduğunuz e-Fatura, e-Arşiv ve e-Smm’nin düzenleme tarihi
          e-Fatura/e-Smm’ye geçiş sağladığınız aktivasyon tarihinden sonra olmalıdır.
          Aynı zamanda oluşturduğunuz e-Fatura’nın düzenleme tarihi alıcının etiketi
          kullanmaya başladığı tarihten de önce olamaz. Alıcının etiketi kullanmaya
          başladığı tarihi e-Fatura gelen kutusunu çekerek görüntüleyebilirsiniz.


          2. e-Fatura / e-Arşiv / e-Smm oluşturma:
            * Önceki adımda müşterinin e-Fatura kullanıcısı olduğu öğrenildiyse,  [e-Fatura oluşturma endpoint'i](/#operation/createEInvoice) kullanılarak e-Fatura oluşturmak gereklidir.
            * Önceki adımda müşterinin e-Arşiv kullanıcısı olduğu öğrenildiyse,  [e-Arşiv oluşturma endpoint'i](/#operation/createEArchive) kullanılarak e-Arşiv oluşturmak gereklidir.
            * Eğer makbuz kullanıcısı iseniz, [e-Smm oluşturma endpoint'ini](/#operation/createESmm) kullanarak e-Smm oluşturmanız gereklidir.

            e-Fatura / e-Arşiv / e-Smm oluşturma işlemi synchronous değildir. Yani istek arka planda yerine getirilir. Bu yüzden e-Fatura / e-Arşiv / e-Smm oluşturma endpoint'leri cevap olarak oluşturma işleminin durumunu takip edebileceğiniz bir işlem `id`'si döner. Bu işlem `id`'sini [sorgulama](/#tag/TrackableJobs) endpoint'inde belirli aralıklarla(`id`'nin kullanım süresi oluşturulduktan sonra 15 dakikadır) kullanıp oluşturma işleminin durumunu takip etmeniz gerekmektedir. İşlem durumu ile ilgili aşağıdaki yanıtları alabilirsiniz:
            * `status: "pending"` işlemin sırada olduğunu, henüz başlamadığını gösterir.
            * `status: "running"` işlemin yapılmakta olduğunu ancak henüz sonuçlanmadığını gösterir.
            * `status: "error"` işlemde bir hata olduğu anlamına gelir. Dönen yanıtta hata mesajını inceleyebilirsiniz.
            * `status: "done"` işlemin başarılı bir şekilde sonuçlandığını gösterir.
          3. e-Fatura / e-Arşiv / e-Smm işleminin başarılı bir şekilde sonuçlandığını
          gördükten sonra e-Fatura / e-Arşiv / e-Smm bilgilerini almak için [Satış
          faturası bilgilerini alma (show)](/#operation/showSalesInvoice) endpoint'ine
          `?include=active_e_document` parametresi ile istek yapmanız gerekmektedir.
          Buradan sıradaki adımda ihtiyaç duyacağınız e-Fatura / e-Arşiv / e-Smm
          `id`'lerini ve başka bilgileri de alabilirsiniz.

          4. e-Fatura / e-Arşiv / e-Smm başarıyla resmileştirildikten sonra
          müşterilerinize PDF olarak göndermek isteyebilirsiniz. Bunun için:
            * e-Arşiv için, 4. adımda elde edeceğiniz e-Arşiv `id`'sini kullanarak [e-Arşiv PDF](/#operation/showEArchivePdf) endpoint'ine istek atabilirsiniz. Bu endpoint PDF henüz yoksa boş bir yanıt ile birlikte 204 döner. Yani 204 almayana kadar belirli aralıklarla bu endpoint'e istek yapmanız gerekmektedir. Geçerli yanıt aldığınızda size dönecek olan PDF URL 1 saat için geçerlidir. Bu yüzden bu linki direk olarak müşterinizle **paylaşmamalısınız**. İndirip müşterinize kendiniz göndermelisiniz.
            * e-Arşiv için anlatılan senaryonun aynısı e-Fatura için de geçerlidir. Tek farklı kısım isteği yapacağınız endpoint'tir: [e-Fatura PDF](/#operation/showEInvoicePdf)
            * e-Arşiv için anlatılan senaryonun aynısı e-Smm için de geçerlidir. Tek farklı kısım isteği yapacağınız endpoint'tir: [e-Smm PDF](/#operation/showESmmPdf)

          ## Belirli Firmalar İçin Özel Gereksinimler


          Eğer özel gereksinim duyan bir firmaya e-fatura kesiyorsanız, bu kısmı
          detaylı bir şekilde gözden geçiriniz. Aşağıda desteklediğimiz özel
          firmaların kendi ihtiyaçlarına göre oluşturduğumuz alanları görebilirsiniz.


          ### SGK için gerekli özel alanlar


          SGK'ya fatura kesebilmek için aşağıdaki json'u inceleyebilirsiniz.


          ``` json

          custom_requirement_params: {
            integration: {
              data: {
                additional_invoice_type: 'SAGLIK_ECZ',
                tax_payer_code: 'xx',
                tax_payer_name: 'xx',
                file_number: 'xx',
                term_start_date: '2021-01-02',
                term_end_date: '2021-01-04'
              }
            }
          }

          ```


          Buradaki data'nın içindeki alanların anlamları:


          - `additional_invoice_type`: ilave fatura tipi

          - `tax_payer_code`: mükellef kodu

          - `tax_payer_name`: mükellef adı

          - `file_number`: dosya numarası

          - `term_start_date`: dönem başlangıç

          - `term_end_date`: dönem bitiş


          Ek olarak `additional_invoice_type` aşağıdaki değerlerden biri olmalıdır.


          Available: *SAGLIK_ECZ, SAGLIK_HAS, SAGLIK_OPT, SAGLIK_MED, ABONELIK,
          MAL_HIZMET, DIGER*

          ### Amazon için gerekli özel alanlar

          Amazon'a kesilen faturalarda adres bilgisi doğru girilmelidir. Uygulamada kullanılan adres bilgileri:


          - `billing_address`: Esentepe Mahallesi, Bahar Sk. No: 13/52

          - `billing_postal_code`: 34394

          - `tax_office`: Zincirlikuyu

          - `district`: Şişli

          - `city`: İstanbul

          - Amazon'a kesilen faturalarda sipariş bilgileri (`order_no` ve `order_date`) doldurulmalıdır.


          Tedarikçi kodu ve EAN / ASIN kodlarını girebileceğiniz alan `custom_requirement_params` alanıdır. `product_id` yerine ürünlerin  paraşüt üzerindeki id sini girebilirsiniz. Örnek olarak aşağıdaki json'u inceleyebilirsiniz.

          ```json

          custom_requirement_params: {
            integration: {
              data: {
                supplier_code: '210'
              }
            },
            products: [
              {
                product_id: 1,
                data: {
                  buyer_code: 'B01M7UN8RS'
                }
              },
              {
                product_id: 2,
                data: {
                  buyer_code: 'B0186FESVC'
                }
              }
            ]
          }

          ```

          Buradaki data'nın içindeki alanların anlamları:

          - `supplier_code`: tedarikçi kodu

          - `product_id`: paraşüt ürün id

          - `buyer_code`: ürün AEN / ASIN kodu


          ## İrsaliye Oluşturma


          İrsaliye oluşturmak için bir müşteri/tedarikçi (`contact`) `id`'si ve bir
          veya birden fazla ürün (`product`) `id`'sine ihtiyacınız vardır.


          ### Müşteri/Tedarikçi


          ##### Yeni bir müşteri/tedarikçi ile


          Eğer ihtiyaç duyduğunuz müşteri/tedarikçi bilgisi henüz yoksa, öncelikle
          müşteri/tedarikçi oluşturmanız gereklidir. Bunun için [Müşteri/Tedarikçi
          oluşturma](/#operation/createContact) endpoint'ini kullanmalısınız. Başarılı
          bir şekilde müşteri/tedarikçi oluşturulursa size dönecek olan yanıt ihtiyaç
          duyacağınız müşteri/tedarikçi `id`'sini içerir.


          ##### Mevcut bir müşteri/tedarikçi ile


          Eğer daha önceden zaten oluşturduğunuz bir müşteri/tedarikçi ile ilişkili
          bir irsaliye oluşturacaksanız öncelikle o müşteri/tedarikçinin `id`'sini
          öğrenmeniz gerekir. Bunun için [Müşteri/tedarikçi
          listesi](/#operation/listContacts) endpoint'ini kullanabilirsiniz.
          Müşteri/tedarikçi listesi endpoint'i isim, e-posta, vergi numarası gibi
          çeşitli filtreleri destekler. Bunları kullanarak aradığınız
          müşteri/tedarikçiyi bulabilirsiniz.


          ### Ürün


          ##### Yeni bir ürün ile


          Eğer ihtiyaç duyduğunuz ürün bilgisi henüz yoksa, öncelikle ürün
          oluşturmanız gereklidir. Bunun için [Ürün
          oluşturma](/#operation/createProduct) endpoint'ini kullanmalısınız. Başarılı
          bir şekilde ürün oluşturulursa size dönecek olan yanıt ihtiyaç duyacağınız
          ürün `id`'sini içerir.


          ##### Mevcut bir ürün ile


          Eğer daha önceden oluşturduğunuz bir ürünü kullanarak bir irsaliye
          oluşturacaksanız öncelikle o ürünün `id`'sini öğrenmeniz gerekir. Bunun için
          [Ürün listesi](/#operation/listProducts) endpoint'ini kullanabilirsiniz.
          Ürün listesi endpoint'i isim, kod gibi çeşitli filtreleri destekler. Bunları
          kullanarak aradığınız ürünü bulabilirsiniz.


          ---


          İhtiyaç duyduğunuz müşteri/tedarikçi ve ürün `id`'lerini aldıktan sonra
          [İrsaliye Oluşturma](/#operation/createShipmentDocument) endpoint'i ile
          irsaliye oluşturabilirsiniz. Endpoint'in tanımında sağ tarafta beklediğimiz
          veri şekli bulunmaktadır, aşağıdaki bilgileri verinin şekli ile kıyaslamak
          daha açıklayıcı olabilir.


          Dikkat edilecek noktalar:

          * `relationships` altındaki `contact`'te bulunan `id` alanına
          müşteri/tedarikçi `id`'sini girmeniz gereklidir.

          * `relationships` altındaki `stock_movements` kısmı bir listedir (`array`)
          ve irsaliye kalemlerini temsil eder. Bu listenin her elemanının ilişkili
          olduğu bir ürün vardır. Yani `stock_movements` altındaki her elemanın
          kendine ait bir `relationships` kısmı mevcuttur. Buradaki `product` `id`
          alanı üstteki ürün adımlarında elde ettiğiniz `id`'yi koymanız gereken
          yerdir.
      host: api.parasut.com
      schemes:
        - https
      basePath: /v4
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      tags:
        - name: Accounts
          x-displayName: KASA VE BANKA
        - name: ApiHome
          x-displayName: API HOME
        - name: BankFees
          x-displayName: BANKA GİDERİ
        - name: Contacts
          x-displayName: MÜŞTERİ / TEDARİKÇİ
        - name: EArchives
          x-displayName: E-ARŞİV
        - name: EInvoiceInboxes
          x-displayName: E-FATURA GELEN KUTUSU
        - name: EInvoices
          x-displayName: E-FATURA
        - name: ESmms
          x-displayName: E-SMM
        - name: Employees
          x-displayName: ÇALIŞAN
        - name: InventoryLevels
          x-displayName: DEPO STOK SEVİYESİ
        - name: ItemCategories
          x-displayName: KATEGORİ
        - name: Products
          x-displayName: ÜRÜN
        - name: PurchaseBills
          x-displayName: FİŞ / FATURA
        - name: Salaries
          x-displayName: MAAŞ
        - name: SalesInvoices
          x-displayName: SATIŞ FATURASI
        - name: ShipmentDocuments
          x-displayName: İRSALİYE
        - name: StockMovements
          x-displayName: STOK HAREKETİ
        - name: StockUpdates
          x-displayName: STOK GÜNCELLEME
        - name: Tags
          x-displayName: ETİKET
        - name: Taxes
          x-displayName: VERGİ
        - name: TrackableJobs
          x-displayName: TRACKABLE JOB
        - name: Transactions
          x-displayName: İŞLEM
        - name: Warehouses
          x-displayName: DEPO
        - name: Webhooks
          x-displayName: Webhooks
      x-tagGroups:
        - name: Satışlar
          tags:
            - SalesInvoices
            - Contacts
        - name: Giderler
          tags:
            - PurchaseBills
            - BankFees
            - Salaries
            - Taxes
            - Contacts
            - Employees
        - name: Resmileştirme
          tags:
            - EInvoiceInboxes
            - EArchives
            - EInvoices
            - ESmms
        - name: Nakit
          tags:
            - Accounts
            - Transactions
        - name: Stok
          tags:
            - Products
            - Warehouses
            - ShipmentDocuments
            - StockMovements
            - InventoryLevels
            - StockUpdates
        - name: Ayarlar
          tags:
            - ItemCategories
            - Tags
        - name: Diğer
          tags:
            - ApiHome
            - TrackableJobs
            - Webhooks
      paths:
        '/{company_id}/accounts':
          parameters:
            - name: company_id
              type: integer
              description: Firma ID
              in: path
              required: true
          get:
            tags:
              - Accounts
            operationId: listAccounts
            summary: Index
            description: ''
            parameters:
              - name: 'filter[name]'
                type: string
                in: query
                description: ''
              - name: 'filter[currency]'
                type: string
                in: query
                description: ''
              - name: 'filter[bank_name]'
                type: string
                in: query
                description: ''
              - name: 'filter[bank_branch]'
                type: string
                in: query
                description: ''
              - name: 'filter[account_type]'
                type: string
                in: query
                description: ''
              - name: 'filter[iban]'
                type: string
                in: query
                description: ''
              - name: sort
                type: string
                in: query
                description: 'Sortable parameters - *Available: id, balance, balance_in_trl*'
                default: '-id'
              - name: 'page[number]'
                type: integer
                in: query
                description: Page Number
                default: 1
              - name: 'page[size]'
                type: integer
                in: query
                description: Page Size
                default: 15
                minimum: 1
                maximum: 25
            responses:
              '200':
                description: Hesaplar
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/definitions/Account'
                    meta:
                      $ref: '#/definitions/ListMeta'
              '400':
                description: Bad Request
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '401':
                description: Unauthorized
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '403':
                description: Forbidden
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '404':
                description: Not Found
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '422':
                description: Unprocessable Entity
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
          post:
            tags:
              - Accounts
            operationId: createAccount
            summary: Create
            description: ''
            parameters:
              - name: account_form
                schema:
                  type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                          maxLength: 255
                        type:
                          type: string
                          maxLength: 255
                          description: Type of the resource
                          enum:
                            - accounts
                        attributes:
                          $ref: '#/definitions/AccountAttributes'
                in: body
                required: true
            responses:
              '201':
                description: Hesap
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/definitions/Account'
              '400':
                description: Bad Request
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '401':
                description: Unauthorized
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '403':
                description: Forbidden
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '404':
                description: Not Found
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '422':
                description: Unprocessable Entity
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
        '/{company_id}/accounts/{id}':
          parameters:
            - name: company_id
              type: integer
              description: Firma ID
              in: path
              required: true
            - name: id
              type: integer
              description: Hesap ID
              in: path
              required: true
          get:
            tags:
              - Accounts
            operationId: showAccount
            summary: Show
            description: ''
            responses:
              '200':
                description: Hesap
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/definitions/Account'
              '400':
                description: Bad Request
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '401':
                description: Unauthorized
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '403':
                description: Forbidden
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '404':
                description: Not Found
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '422':
                description: Unprocessable Entity
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
          put:
            tags:
              - Accounts
            operationId: updateAccount
            summary: Edit
            description: ''
            parameters:
              - name: account_form
                schema:
                  type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                          maxLength: 255
                        type:
                          type: string
                          maxLength: 255
                          description: Type of the resource
                          enum:
                            - accounts
                        attributes:
                          $ref: '#/definitions/AccountAttributes'
                in: body
                required: true
            responses:
              '200':
                description: Hesap
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/definitions/Account'
              '400':
                description: Bad Request
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '401':
                description: Unauthorized
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '403':
                description: Forbidden
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '404':
                description: Not Found
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '422':
                description: Unprocessable Entity
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
          delete:
            tags:
              - Accounts
            operationId: deleteAccount
            summary: Delete
            description: ''
            responses:
              '204':
                description: No content
                schema:
                  type: object
              '400':
                description: Bad Request
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '401':
                description: Unauthorized
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '403':
                description: Forbidden
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '404':
                description: Not Found
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '422':
                description: Unprocessable Entity
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
        '/{company_id}/accounts/{id}/transactions':
          parameters:
            - name: company_id
              type: integer
              description: Firma ID
              in: path
              required: true
            - name: id
              type: integer
              description: Hesap ID
              in: path
              required: true
          get:
            tags:
              - Accounts
            operationId: listAccountTransactions
            summary: Transactions
            description: ''
            parameters:
              - name: 'filter[date]'
                type: string
                in: query
                description: ''
              - name: sort
                type: string
                in: query
                description: 'Sortable parameters - *Available: id*'
                default: id
              - name: 'page[number]'
                type: integer
                in: query
                description: Page Number
                default: 1
              - name: 'page[size]'
                type: integer
                in: query
                description: Page Size
                default: 15
                minimum: 1
                maximum: 25
              - name: include
                type: string
                in: query
                description: >-
                  Response ile birlikte geri dönmesini istediğiniz ilişkiler -
                  *Available: debit_account, credit_account*
            responses:
              '200':
                description: İşlemler
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/definitions/Transaction'
                    included:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            maxLength: 255
                          type:
                            type: string
                            maxLength: 255
                            description: Type of the resource
                            enum:
                              - accounts
                              - payments
                          attributes:
                            type: object
                          relationships:
                            type: object
                    meta:
                      $ref: '#/definitions/ListMeta'
              '400':
                description: Bad Request
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '401':
                description: Unauthorized
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '403':
                description: Forbidden
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '404':
                description: Not Found
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '422':
                description: Unprocessable Entity
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
        '/{company_id}/accounts/{id}/debit_transactions':
          parameters:
            - name: company_id
              type: integer
              description: Firma ID
              in: path
              required: true
            - name: id
              type: integer
              description: Kasa/Banka Hesabı ID
              in: path
              required: true
          post:
            tags:
              - Accounts
            operationId: createDebitTransaction
            summary: Debit Transaction
            description: ''
            parameters:
              - name: include
                type: string
                in: query
                description: >-
                  Response ile birlikte geri dönmesini istediğiniz ilişkiler -
                  *Available: debit_account, credit_account, payments*
              - name: transaction_form
                schema:
                  type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                          maxLength: 255
                        type:
                          type: string
                          maxLength: 255
                          description: Type of the resource
                          enum:
                            - transactions
                        attributes:
                          $ref: '#/definitions/AccountDebitCreditTransactionFormAttributes'
                in: body
                required: true
            responses:
              '201':
                description: İşlem
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/definitions/Transaction'
                    included:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            maxLength: 255
                          type:
                            type: string
                            maxLength: 255
                            description: Type of the resource
                            enum:
                              - accounts
                              - payments
                          attributes:
                            type: object
                          relationships:
                            type: object
              '400':
                description: Bad Request
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '401':
                description: Unauthorized
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '403':
                description: Forbidden
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '404':
                description: Not Found
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '422':
                description: Unprocessable Entity
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
        '/{company_id}/accounts/{id}/credit_transactions':
          parameters:
            - name: company_id
              type: integer
              description: Firma ID
              in: path
              required: true
            - name: id
              type: integer
              description: Kasa/Banka Hesabı ID
              in: path
              required: true
          post:
            tags:
              - Accounts
            operationId: createCreditTransaction
            summary: Credit Transaction
            description: ''
            parameters:
              - name: include
                type: string
                in: query
                description: >-
                  Response ile birlikte geri dönmesini istediğiniz ilişkiler -
                  *Available: debit_account, credit_account, payments*
              - name: transaction_form
                schema:
                  type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                          maxLength: 255
                        type:
                          type: string
                          maxLength: 255
                          description: Type of the resource
                          enum:
                            - transactions
                        attributes:
                          $ref: '#/definitions/AccountDebitCreditTransactionFormAttributes'
                in: body
                required: true
            responses:
              '201':
                description: İşlem
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/definitions/Transaction'
                    included:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            maxLength: 255
                          type:
                            type: string
                            maxLength: 255
                            description: Type of the resource
                            enum:
                              - accounts
                              - payments
                          attributes:
                            type: object
                          relationships:
                            type: object
              '400':
                description: Bad Request
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '401':
                description: Unauthorized
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '403':
                description: Forbidden
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '404':
                description: Not Found
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '422':
                description: Unprocessable Entity
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
        /me:
          get:
            tags:
              - ApiHome
            operationId: showMe
            summary: Show
            description: ''
            parameters:
              - name: include
                type: string
                in: query
                description: >-
                  Response ile birlikte geri dönmesini istediğiniz ilişkiler -
                  *Available: user_roles, companies, profile*
            responses:
              '200':
                description: Me
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/definitions/Me'
                    included:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            maxLength: 255
                          type:
                            type: string
                            maxLength: 255
                            description: Type of the resource
                            enum:
                              - user_roles
                              - companies
                              - profiles
                          attributes:
                            type: object
                          relationships:
                            type: object
              '400':
                description: Bad Request
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '401':
                description: Unauthorized
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '403':
                description: Forbidden
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '404':
                description: Not Found
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '422':
                description: Unprocessable Entity
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
        '/{company_id}/bank_fees':
          parameters:
            - name: company_id
              type: integer
              description: Firma ID
              in: path
              required: true
          post:
            tags:
              - BankFees
            operationId: createBankFee
            summary: Create
            description: ''
            parameters:
              - name: include
                type: string
                in: query
                description: >-
                  Response ile birlikte geri dönmesini istediğiniz ilişkiler -
                  *Available: category, tags*
              - name: bank_fee_form
                schema:
                  type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                          maxLength: 255
                        type:
                          type: string
                          maxLength: 255
                          description: Type of the resource
                          enum:
                            - bank_fees
                        attributes:
                          $ref: '#/definitions/BankFeeAttributes'
                        relationships:
                          type: object
                          properties:
                            category:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                      maxLength: 255
                                    type:
                                      type: string
                                      maxLength: 255
                                      description: Type of the resource
                                      enum:
                                        - item_categories
                            tags:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      id:
                                        type: string
                                        maxLength: 255
                                      type:
                                        type: string
                                        maxLength: 255
                                        description: Type of the resource
                                        enum:
                                          - tags
                in: body
                required: true
            responses:
              '201':
                description: Banka Gideri
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/definitions/BankFee'
                    included:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            maxLength: 255
                          type:
                            type: string
                            maxLength: 255
                            description: Type of the resource
                            enum:
                              - item_categories
                              - tags
                          attributes:
                            type: object
                          relationships:
                            type: object
              '400':
                description: Bad Request
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '401':
                description: Unauthorized
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '403':
                description: Forbidden
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '404':
                description: Not Found
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '422':
                description: Unprocessable Entity
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
        '/{company_id}/bank_fees/{id}':
          parameters:
            - name: company_id
              type: integer
              description: Firma ID
              in: path
              required: true
            - name: id
              type: integer
              description: Banka Gideri ID
              in: path
              required: true
          get:
            tags:
              - BankFees
            operationId: showBankFee
            summary: Show
            description: ''
            parameters:
              - name: include
                type: string
                in: query
                description: >-
                  Response ile birlikte geri dönmesini istediğiniz ilişkiler -
                  *Available: category, tags*
            responses:
              '200':
                description: Banka Gideri
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/definitions/BankFee'
                    included:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            maxLength: 255
                          type:
                            type: string
                            maxLength: 255
                            description: Type of the resource
                            enum:
                              - item_categories
                              - tags
                          attributes:
                            type: object
                          relationships:
                            type: object
              '400':
                description: Bad Request
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '401':
                description: Unauthorized
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '403':
                description: Forbidden
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '404':
                description: Not Found
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '422':
                description: Unprocessable Entity
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
          put:
            tags:
              - BankFees
            operationId: updateBankFee
            summary: Edit
            description: ''
            parameters:
              - name: include
                type: string
                in: query
                description: >-
                  Response ile birlikte geri dönmesini istediğiniz ilişkiler -
                  *Available: category, tags*
              - name: bank_fee_form
                schema:
                  type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                          maxLength: 255
                        type:
                          type: string
                          maxLength: 255
                          description: Type of the resource
                          enum:
                            - bank_fees
                        attributes:
                          $ref: '#/definitions/BankFeeAttributes'
                        relationships:
                          type: object
                          properties:
                            category:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                      maxLength: 255
                                    type:
                                      type: string
                                      maxLength: 255
                                      description: Type of the resource
                                      enum:
                                        - item_categories
                            tags:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      id:
                                        type: string
                                        maxLength: 255
                                      type:
                                        type: string
                                        maxLength: 255
                                        description: Type of the resource
                                        enum:
                                          - tags
                in: body
                required: true
            responses:
              '200':
                description: Banka Gideri
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/definitions/BankFee'
                    included:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            maxLength: 255
                          type:
                            type: string
                            maxLength: 255
                            description: Type of the resource
                            enum:
                              - item_categories
                              - tags
                          attributes:
                            type: object
                          relationships:
                            type: object
              '400':
                description: Bad Request
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '401':
                description: Unauthorized
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '403':
                description: Forbidden
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '404':
                description: Not Found
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '422':
                description: Unprocessable Entity
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
          delete:
            tags:
              - BankFees
            operationId: deleteBankFee
            summary: Delete
            description: ''
            responses:
              '204':
                description: No content
                schema:
                  type: object
              '400':
                description: Bad Request
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '401':
                description: Unauthorized
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '403':
                description: Forbidden
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '404':
                description: Not Found
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '422':
                description: Unprocessable Entity
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
        '/{company_id}/bank_fees/{id}/archive':
          parameters:
            - name: company_id
              type: integer
              description: Firma ID
              in: path
              required: true
            - name: id
              type: integer
              description: Banka Gideri ID
              in: path
              required: true
          patch:
            tags:
              - BankFees
            operationId: archiveBankFee
            summary: Archive
            description: ''
            parameters:
              - name: include
                type: string
                in: query
                description: >-
                  Response ile birlikte geri dönmesini istediğiniz ilişkiler -
                  *Available: category, tags*
            responses:
              '200':
                description: Banka Gideri
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/definitions/BankFee'
                    included:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            maxLength: 255
                          type:
                            type: string
                            maxLength: 255
                            description: Type of the resource
                            enum:
                              - item_categories
                              - tags
                          attributes:
                            type: object
                          relationships:
                            type: object
              '400':
                description: Bad Request
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '401':
                description: Unauthorized
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '403':
                description: Forbidden
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '404':
                description: Not Found
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '422':
                description: Unprocessable Entity
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
        '/{company_id}/bank_fees/{id}/unarchive':
          parameters:
            - name: company_id
              type: integer
              description: Firma ID
              in: path
              required: true
            - name: id
              type: integer
              description: Banka Gideri ID
              in: path
              required: true
          patch:
            tags:
              - BankFees
            operationId: unarchiveBankFee
            summary: Unarchive
            description: ''
            parameters:
              - name: include
                type: string
                in: query
                description: >-
                  Response ile birlikte geri dönmesini istediğiniz ilişkiler -
                  *Available: category, tags*
            responses:
              '200':
                description: Banka Gideri
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/definitions/BankFee'
                    included:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            maxLength: 255
                          type:
                            type: string
                            maxLength: 255
                            description: Type of the resource
                            enum:
                              - item_categories
                              - tags
                          attributes:
                            type: object
                          relationships:
                            type: object
              '400':
                description: Bad Request
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '401':
                description: Unauthorized
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '403':
                description: Forbidden
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '404':
                description: Not Found
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '422':
                description: Unprocessable Entity
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
        '/{company_id}/bank_fees/{id}/payments':
          parameters:
            - name: company_id
              type: integer
              description: Firma ID
              in: path
              required: true
            - name: id
              type: integer
              description: Banka Gideri ID
              in: path
              required: true
          post:
            tags:
              - BankFees
            operationId: payBankFee
            summary: Pay
            description: ''
            parameters:
              - name: include
                type: string
                in: query
                description: >-
                  Response ile birlikte geri dönmesini istediğiniz ilişkiler -
                  *Available: payable, transaction*
              - name: payment_form
                schema:
                  type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                          maxLength: 255
                        type:
                          type: string
                          maxLength: 255
                          description: Type of the resource
                          enum:
                            - payments
                        attributes:
                          $ref: '#/definitions/PaymentFormAttributes'
                in: body
                required: true
            responses:
              '201':
                description: Ödeme
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/definitions/Payment'
                    included:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            maxLength: 255
                          type:
                            type: string
                            maxLength: 255
                            description: Type of the resource
                            enum:
                              - sales_invoices
                              - purchase_bills
                              - taxes
                              - bank_fees
                              - salaries
                              - checks
                              - transactions
                          attributes:
                            type: object
                          relationships:
                            type: object
              '400':
                description: Bad Request
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '401':
                description: Unauthorized
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '403':
                description: Forbidden
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '404':
                description: Not Found
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '422':
                description: Unprocessable Entity
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
        '/{company_id}/contacts':
          parameters:
            - name: company_id
              type: integer
              description: Firma ID
              in: path
              required: true
          get:
            tags:
              - Contacts
            operationId: listContacts
            summary: Index
            description: ''
            parameters:
              - name: 'filter[name]'
                type: string
                in: query
                description: ''
              - name: 'filter[email]'
                type: string
                in: query
                description: ''
              - name: 'filter[tax_number]'
                type: string
                in: query
                description: ''
              - name: 'filter[tax_office]'
                type: string
                in: query
                description: ''
              - name: 'filter[city]'
                type: string
                in: query
                description: ''
              - name: 'filter[account_type]'
                type: string
                in: query
                description: |
                  Available: *customer, supplier*
              - name: sort
                type: string
                in: query
                description: 'Sortable parameters - *Available: id, balance, name, email*'
                default: '-balance'
              - name: 'page[number]'
                type: integer
                in: query
                description: Page Number
                default: 1
              - name: 'page[size]'
                type: integer
                in: query
                description: Page Size
                default: 15
                minimum: 1
                maximum: 25
              - name: include
                type: string
                in: query
                description: >-
                  Response ile birlikte geri dönmesini istediğiniz ilişkiler -
                  *Available: category, contact_portal, contact_people*
            responses:
              '200':
                description: Müşteriler/Tedarikçiler
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/definitions/Contact'
                    included:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            maxLength: 255
                          type:
                            type: string
                            maxLength: 255
                            description: Type of the resource
                            enum:
                              - item_categories
                              - contact_portals
                              - contact_people
                          attributes:
                            type: object
                          relationships:
                            type: object
                    meta:
                      $ref: '#/definitions/ListMeta'
              '400':
                description: Bad Request
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '401':
                description: Unauthorized
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '403':
                description: Forbidden
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '404':
                description: Not Found
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '422':
                description: Unprocessable Entity
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
          post:
            tags:
              - Contacts
            operationId: createContact
            summary: Create
            description: ''
            parameters:
              - name: include
                type: string
                in: query
                description: >-
                  Response ile birlikte geri dönmesini istediğiniz ilişkiler -
                  *Available: category, contact_portal, contact_people*
              - name: contact_form
                schema:
                  type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                          maxLength: 255
                        type:
                          type: string
                          maxLength: 255
                          description: Type of the resource
                          enum:
                            - contacts
                        attributes:
                          $ref: '#/definitions/ContactAttributes'
                        relationships:
                          type: object
                          properties:
                            category:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                      maxLength: 255
                                    type:
                                      type: string
                                      maxLength: 255
                                      description: Type of the resource
                                      enum:
                                        - item_categories
                            contact_people:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      id:
                                        type: string
                                        maxLength: 255
                                      type:
                                        type: string
                                        maxLength: 255
                                        description: Type of the resource
                                        enum:
                                          - contact_people
                                      attributes:
                                        $ref: '#/definitions/ContactPersonAttributes'
                in: body
                required: true
            responses:
              '201':
                description: Müşteri/Tedarikçi
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/definitions/Contact'
                    included:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            maxLength: 255
                          type:
                            type: string
                            maxLength: 255
                            description: Type of the resource
                            enum:
                              - item_categories
                              - contact_portals
                              - contact_people
                          attributes:
                            type: object
                          relationships:
                            type: object
              '400':
                description: Bad Request
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '401':
                description: Unauthorized
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '403':
                description: Forbidden
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '404':
                description: Not Found
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '422':
                description: Unprocessable Entity
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
        '/{company_id}/contacts/{id}':
          parameters:
            - name: company_id
              type: integer
              description: Firma ID
              in: path
              required: true
            - name: id
              type: integer
              description: Müşteri/Tedarikçi ID
              in: path
              required: true
          get:
            tags:
              - Contacts
            operationId: showContact
            summary: Show
            description: ''
            parameters:
              - name: include
                type: string
                in: query
                description: >-
                  Response ile birlikte geri dönmesini istediğiniz ilişkiler -
                  *Available: category, contact_portal, contact_people*
            responses:
              '200':
                description: Müşteri/Tedarikçi
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/definitions/Contact'
                    included:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            maxLength: 255
                          type:
                            type: string
                            maxLength: 255
                            description: Type of the resource
                            enum:
                              - item_categories
                              - contact_portals
                              - contact_people
                          attributes:
                            type: object
                          relationships:
                            type: object
              '400':
                description: Bad Request
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '401':
                description: Unauthorized
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '403':
                description: Forbidden
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '404':
                description: Not Found
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '422':
                description: Unprocessable Entity
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
          put:
            tags:
              - Contacts
            operationId: updateContact
            summary: Edit
            description: ''
            parameters:
              - name: include
                type: string
                in: query
                description: >-
                  Response ile birlikte geri dönmesini istediğiniz ilişkiler -
                  *Available: category, contact_portal, contact_people*
              - name: contact_form
                schema:
                  type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                          maxLength: 255
                        type:
                          type: string
                          maxLength: 255
                          description: Type of the resource
                          enum:
                            - contacts
                        attributes:
                          $ref: '#/definitions/ContactAttributes'
                        relationships:
                          type: object
                          properties:
                            category:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                      maxLength: 255
                                    type:
                                      type: string
                                      maxLength: 255
                                      description: Type of the resource
                                      enum:
                                        - item_categories
                            contact_people:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      id:
                                        type: string
                                        maxLength: 255
                                      type:
                                        type: string
                                        maxLength: 255
                                        description: Type of the resource
                                        enum:
                                          - contact_people
                                      attributes:
                                        $ref: '#/definitions/ContactPersonAttributes'
                in: body
                required: true
            responses:
              '200':
                description: Müşteri/Tedarikçi
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/definitions/Contact'
                    included:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            maxLength: 255
                          type:
                            type: string
                            maxLength: 255
                            description: Type of the resource
                            enum:
                              - item_categories
                              - contact_portals
                              - contact_people
                          attributes:
                            type: object
                          relationships:
                            type: object
              '400':
                description: Bad Request
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '401':
                description: Unauthorized
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '403':
                description: Forbidden
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '404':
                description: Not Found
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '422':
                description: Unprocessable Entity
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
          delete:
            tags:
              - Contacts
            operationId: deleteContact
            summary: Delete
            description: ''
            responses:
              '204':
                description: No content
                schema:
                  type: object
              '400':
                description: Bad Request
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '401':
                description: Unauthorized
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '403':
                description: Forbidden
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '404':
                description: Not Found
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
              '422':
                description: Unprocessable Entity
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: '#/definitions/Error'
        '/{company_id}/contacts/{id}/contact_debit_transactions':
          parameters:
            - name: company_id
              type: integer
              description: Firma ID
              in: path
              required: true
            - name: id
              type: integer
              description: Müşteri/Tedarikçi ID
              in: path
              required: true
          post:
            tags:
              - Contacts
            operationId: collectFromContact
            summary: Tahsilat
            description: ''
            parameters:
              - name: include
                type: string
                in: query
                description: >-
                  Response ile birlikte geri dönmesini istediğiniz ilişkiler -
                  *Available: debit_account, credit_account, payments*
              - name: transaction_form
                schema:
                  type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                          maxLength: 255
                        type:
                          type: string
                          maxLength: 255
                          description: Type of the resource
                          enum:
                            - transactions
                        attributes:
                          $ref: '#/definitions/ContactCollectionFormAttributes'
                in: body
                required: true
            responses:
              '201':
                description: İşlem
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/definitions/Transaction'
                    included:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            maxLength: 255
                          type:
                            type: string
                            maxLength: 255
                            description: Type of the resource
                            enum:
                              - accounts
                              - payments
                          attributes:
                            type: object
                          relationships:
                            type: object
